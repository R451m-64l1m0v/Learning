// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RegisterToDoc.BD;

namespace RegisterToDoc.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("RegisterToDoc.Models.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Education")
                        .HasColumnType("TEXT");

                    b.Property<int>("Experience")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Specialization")
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("RegisterToDoc.Models.Interval", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("EndHour")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StartHour")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("WorkTimeGraphicId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("WorkTimeGraphicId");

                    b.ToTable("Intervals");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Interval");
                });

            modelBuilder.Entity("RegisterToDoc.Models.WorkTimeGraphic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DayNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DoctorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.ToTable("WorkTimeGraphics");
                });

            modelBuilder.Entity("RegisterToDoc.Models.WorkTime", b =>
                {
                    b.HasBaseType("RegisterToDoc.Models.Interval");

                    b.Property<int?>("DoctorId")
                        .HasColumnType("INTEGER");

                    b.HasIndex("DoctorId");

                    b.HasDiscriminator().HasValue("WorkTime");
                });

            modelBuilder.Entity("RegisterToDoc.Models.Interval", b =>
                {
                    b.HasOne("RegisterToDoc.Models.WorkTimeGraphic", null)
                        .WithMany("Intervals")
                        .HasForeignKey("WorkTimeGraphicId");
                });

            modelBuilder.Entity("RegisterToDoc.Models.WorkTimeGraphic", b =>
                {
                    b.HasOne("RegisterToDoc.Models.Doctor", null)
                        .WithMany("WorkTimeGraphic")
                        .HasForeignKey("DoctorId");
                });

            modelBuilder.Entity("RegisterToDoc.Models.WorkTime", b =>
                {
                    b.HasOne("RegisterToDoc.Models.Doctor", null)
                        .WithMany("WorkTimeFull")
                        .HasForeignKey("DoctorId");
                });

            modelBuilder.Entity("RegisterToDoc.Models.Doctor", b =>
                {
                    b.Navigation("WorkTimeFull");

                    b.Navigation("WorkTimeGraphic");
                });

            modelBuilder.Entity("RegisterToDoc.Models.WorkTimeGraphic", b =>
                {
                    b.Navigation("Intervals");
                });
#pragma warning restore 612, 618
        }
    }
}
